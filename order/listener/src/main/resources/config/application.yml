application:
  project: protocol

server:
  shutdown: graceful
  port: 8080

spring:
  application.name: protocol-${common.blockchain}-order-listener
  jackson:
    mapper:
      ACCEPT_CASE_INSENSITIVE_ENUMS: true
    deserialization:
      FAIL_ON_UNKNOWN_PROPERTIES: false
    default-property-inclusion: non_null
  aop:
    proxy-target-class: false
  main:
    banner-mode: log
    web-application-type: reactive
mongock:
  change-logs-scan-package:
    - com.rarible.ethereum.listener.log.mongock

rarible:
  ethereum:
    converter:
      enabled: true
    read-only-transaction-sender:
      enabled: true
    cache:
      enabled: true
  core:
    apm:
      agent:
        enabled: true
        server: http://elk_apm-server:8200
        packages: com.rarible.protocol.order.listener
    contract:
      enabled: true
    client:
      name: rarible-protocol
      k8s: true

protocol:
  nft:
    subscriber:
      blockchain: ${common.blockchain}
  order:
    subscriber:
      blockchain: ${common.blockchain}
  erc20:
    subscriber:
      blockchain: ${common.blockchain}

common:
  eip712-domain-name: Exchange
  eip712-domain-version: 2
  opensea-eip712-domain-name: Wyvern Exchange Contract
  opensea-eip712-domain-version: 2.3
  metric-root-path: "protocol.order.indexer"
  exchange-contract-addresses:
    seaport-v1: "0x0000000000000000000000000000000000000000"
    looksrare-V1: "0x0000000000000000000000000000000000000000"
    x2y2-V1: "0x0000000000000000000000000000000000000000"
    blurV1: "0000000000000000000000000000000000000000"
  transfer-proxy-addresses:
    seaport-transfer-proxy: "0x0000000000000000000000000000000000000000"
    x2y2-transfer-proxy-erc721: "0x0000000000000000000000000000000000000000"
    x2y2-transfer-proxy-erc1155: "0x0000000000000000000000000000000000000000"
    looksrare-transfer-manager-erc721: "0x0000000000000000000000000000000000000000"
    looksrare-transfer-manager-non-compliant-erc721: "0x0000000000000000000000000000000000000000"
    looksrare-transfer-manager-erc1155: "0x0000000000000000000000000000000000000000"
  currency-contract-addresses:
    weth: "0x0000000000000000000000000000000000000000"
  feature-flags:
    scanner-version: V1

listener:
  updateAuctionOngoingState: PT1M
  updateAuctionOngoingStateEnabled: false
  updateAuctionOngoingStateEndLag: PT5M
  openSeaEndpoint: "https://api.opensea.io"
  # TODO remove later
  collectionStatRefresh:
    enabled: true
    currencies: 0x0f5d2fb29fb7d3cfee444a200298f468908cc942,0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48,0x95ad61b0a150d79219dcf64e1e6cc01f0b64c4ce,0x64d91f12ece7362f91a6f8e7940cd55f05060b92,0x6b175474e89094c44da98b954eedeac495271d0f
    rate: PT1M
    timeOffset: PT1H
    batchSize: 20
  open-sea-orders-load-delay-worker:
    log-prefix: "OpenSeaDelay"
    state-id: "open_sea_order_delay_fetch"
    worker-name: "open-sea-orders-delay-load-worker"
    delay: PT60M
    load-period: 30s
    polling-period: 30s
  rarible-expired-bid-worker:
    enabled: true
    polling-period: 10m
  start-end-worker:
    enabled: true
    polling-period: 1m

blockchain:
  scanner:
    kafka:
      maxPollRecords: 100
    ethereum:
      blockchain: ${common.blockchain}
      service: "order"
      optimisticLockRetries: 5
      scan:
        batch-load:
          enabled: true
          batch-size: 50
      task:
        reindex:
          enabled: true
        check-blocks:
          enabled: true
          reindex-blocks: true
      retry-policy:
        scan:
          reconnect-delay: 2s
        client:
          delay: 2s
      monitoring:
        enabled: true
        rootPath: ${common.metric-root-path}
        worker:
          pollingPeriod: 1m

ethereumMaxFrameSize: 209715200
ethereumBlockBatchSize: 50
