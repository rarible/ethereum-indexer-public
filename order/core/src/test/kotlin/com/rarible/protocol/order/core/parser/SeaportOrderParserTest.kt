package com.rarible.protocol.order.core.parser

import io.daonomic.rpc.domain.Binary
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

class SeaportOrderParserTest {
    @Test
    fun `convert - advanced order`() {
        val input = Binary.apply(
            ""
        )
        val advanced = SeaportOrderParser.parseAdvancedOrders(input)
        assertThat(advanced).hasSize(2)

        assertThat(
            advanced[0].signature
        ).isEqualTo(Binary.apply("0x0c4df824ed82c780e20057cf9eb2190a58a5f6295aaa80713cef7a1fdd3d215e20752596d710c318312131785f72edd6a5b41aed613221d884ba673f922041a11c"))

        assertThat(
            advanced[1].signature
        ).isEqualTo(Binary.empty())
    }
}