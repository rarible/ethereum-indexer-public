package com.rarible.protocol.nft.core.model

import io.daonomic.rpc.domain.Binary
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

internal class ByteCodeFragmentTest {
    private val scamCode = Binary.apply("0x608060405236600a57005b600036606060008073a281c0d1dce3ff738bbb5aa6849c82f2a3e564936001600160a01b03168585604051603e92919060cc565b600060405180830381855af49150503d80600081146077576040519150601f19603f3d011682016040523d82523d6000602084013e607c565b606091505b50915091508160bf5760405162461bcd60e51b815260206004820152600b60248201526a4c6f636b6564204974656d60a81b604482015260640160405180910390fd5b8051945060200192505050f35b600082848337910190815291905056fea26469706673582212200cf4e8417b43b34bc628bf9368a6ef644f0f2ce18308d0f24fbfe198c168c11464736f6c63438862177216")

    @Test
    fun `detect match - ok on start`() {
        val fragment = ByteCodeFragment(0, "0x608060405236600a57005b600036606060008073")
        assertThat(fragment.matchFragment(scamCode)).isTrue
    }

    @Test
    fun `detect match - ok on middle`() {
        val fragment = ByteCodeFragment(41, "0x01600160a01b03168585604051603e92919060cc565b600060405180830381855af49150503d80600081146077576040519150601f19603f3d011682016040523d82523d6000602084013e607c565b606091505b50915091508160bf5760405162461bcd60e51b815260206004820152600b60248201526a4c6f636b6564204974656d60a81b604482015260640160405180910390fd5b8051945060200192505050f3")
        assertThat(fragment.matchFragment(scamCode)).isTrue
    }

    @Test
    fun `detect match - false on middle`() {
        val fragment = ByteCodeFragment(41, "0x01600160a01b03168585604051603e92919060cc565b600060405180830381855af49150503d80600081146077576040519150601f19603f3d011682016040523d82523d6000602084013e607c565b606091505b50915091508160bf5760405162461bcd60e51b815260206004820152600b60248201526a4c6f636b6564204974656d60a81b604482015260640160405180910390fd5b8051945060200192505050f3")
        val code = Binary.apply("0x608060405236600a57005b600036606060008073a281c0d1dce3ff738bbb5aa6849c82f2a3e564936001")
        assertThat(fragment.matchFragment(code)).isFalse
    }
}
